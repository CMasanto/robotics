README FILE

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Corey Masanto
Marcus Vinicius de Resende Maia Leite
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Run main.m for an to execute/animate the process.

We implemented our Union-Find data structure in the DisjointSets class.
This class contains a list of lists; adding a Box to this data structure
creates a new list of size 1, with only this Box within it.
The find operation returns the list in which this Box exists, and the union
operation takes the two input Boxes, and combines their lists together, 
with the two original lists being removed from the DsjointSets list of
lists.

The subdivision tree is implemented by giving each Box a total of 5
pointers:
parent
topLeftChild
topRightChild
bottomLeftChild
bottomRightChild

A brute-force algorithm is used to determine adjacent Boxes. Every box is
compared to the current Box, and if the smaller of 2 Boxes (that are 
being compared) has an edge midpoint that lies on a larger Box's edge,
they are determined to be adjacent.